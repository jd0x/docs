swagger: '2.0'
info:
  title: Hasura Auth API
  description: >
    Hasura Auth is an Identity and User management microservice. This is the API

    documentation for Hasura Auth.

    The APIs are broken down into 3 categories.

    1. The anonymous category means all those requests can be made by a user who
    is not logged in.

    2. The user category means all those requests can be made by a user who is
    logged in.

    3. The admin category means all those requests can be made by a user who is
    logged in and has the admin role.

    The user and the admin category of requests require the "Authorization"
    header. Refer to documentation for more details.
  version: '0.15'
basePath: /v1
basePrefix: /v1
prefix: /v1
schemes:
  - https
externalDocs:
  description: Documentation for Hasura Auth
  url: 'https://docs.hasura.io'
consumes:
  - application/json
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
paths:
  /signup:
    post:
      summary: Use this endpoint to register/signup a user
      description: The mandatory fields are provider and data.
      parameters:
        - name: signup data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SignupData'
      responses:
        '200':
          description: >-
            An object with the hasura ID, roles and auth token of the logged in
            user.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Errors
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous
  /login:
    post:
      summary: Use this endpoint to login a user
      description: The mandatory fields are provider and data.
      parameters:
        - name: login data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SignupData'
      responses:
        '200':
          description: >-
            An object with the hasura ID, roles and auth token of the logged in
            user.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Errors
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous
  /user/logout:
    post:
      summary: The logout endpoint
      description: logout endpoint
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <auth token>
      responses:
        '200':
          description: A message describing success or failure
          schema:
            $ref: '#/definitions/SuccessMessage'
      tags:
        - user
  /user/info:
    get:
      summary: Get credentials of current logged in user
      description: >-
        This endpoint returns the user info object of the current logged in
        user.
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <auth token>
      responses:
        '200':
          description: >-
            An object with the hasura ID, roles and auth token of the logged in
            user.
          schema:
            $ref: '#/definitions/UserInfo'
        '401':
          description: This response is returned when there is no logged in user.
        default:
          description: Errors
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - user
  /providers/mobile/send-otp:
    post:
      summary: Sends the OTP to mobile
      description: Sends the OTP to mobile. It can be used for both login and signup.
      parameters:
        - name: mobile
          in: body
          required: true
          schema:
            type: object
            properties:
              mobile:
                type: string
                description: The mobile phone number of the user to send OTP to.
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous
  /providers/mobile/resend-otp:
    post:
      summary: Resend the OTP to mobile
      description: Resend the OTP to mobile.
      parameters:
        - name: mobile
          in: body
          required: true
          schema:
            type: object
            properties:
              mobile:
                type: string
                description: The mobile phone number of the user to send OTP to.
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous

  /providers/email/verify-email:
    get:
      summary: Verify user
      parameters:
        - name: token
          in: query
          type: string
          required: true
          description: 'Verification token'
      responses:
        200:
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous

  /providers/email/resend-verification:
    post:
      summary: Resend verification email
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the user
      responses:
        200:
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous

  /providers/email/forgot-password:
    post:
      summary: Request email for resetting password
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the user
      responses:
        200:
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous

  /providers/email/reset-password:
    post:
      summary: Reset password
      parameters:
        - name: reset data
          in: body
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
                description: Reset token fetched via forgot password email
              password:
                type: string
                description: New password for the user
      responses:
        200:
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - anonymous

  /user/change-password:
    post:
      summary: Change logged in user's password
      description: >-
        Endpoint to change the password of the logged in user. Make sure the
        current user is logged in.
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: JSON payload
          in: body
          required: true
          schema:
            type: object
            properties:
              old_password:
                type: string
                description: The current/old password of the user
              new_password:
                type: string
                description: The new password of the user
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - user

  /admin/roles:
    get:
      summary: Endpoint to get a list of all the roles available
      description: Lists all the roles
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <auth token>
      responses:
        '200':
          description: The list of roles
          schema:
            $ref: '#/definitions/RoleList'
      tags:
        - admin
  '/admin/users/{hasura_id}':
    get:
      summary: Fetch user by id
      description: Fetch users' information by id
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <auth token>
        - name: hasura_id
          in: path
          description: hasura_id of the user
          type: integer
          required: true
      responses:
        '200':
          description: The user's information
          schema:
            $ref: '#/definitions/AdminUserInfo'
      tags:
        - admin
  /admin/create-role:
    post:
      summary: Create a new role
      description: Create a new role
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: role
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                description: The role name
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin
  /admin/delete-role:
    post:
      summary: Delete a role
      description: Delete an existing role
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: role
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                description: The role name to be deleted
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin

  /admin/user/activate:
    post:
      summary: Activate a user
      description: Activate an existing user
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: hasura_id
          in: body
          required: true
          schema:
            type: object
            properties:
              hasura_id:
                type: integer
                description: The ID of the user to be activated
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin
  /admin/user/deactivate:
    post:
      summary: Deactivate a user
      description: Deactivate an existing user
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: hasura_id
          in: body
          required: true
          schema:
            type: object
            properties:
              hasura_id:
                type: integer
                description: The ID of the user to be deactivated
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin
  /admin/user/add-role:
    post:
      summary: Assign role to user
      description: Assign a particular role to a user
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: JSON payload
          in: body
          required: true
          schema:
            type: object
            properties:
              hasura_id:
                type: integer
                description: The ID of the user
              role:
                type: string
                description: The role name to be assigned
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin
  /admin/user/remove-role:
    post:
      summary: Remove role from user
      description: Remove a particular role from a user
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: JSON payload
          in: body
          required: true
          schema:
            type: object
            properties:
              hasura_id:
                type: integer
                description: The ID of the user
              role:
                type: string
                description: The role name to be unassigned
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin
  /admin/user/remove-all-sessions:
    post:
      summary: Force logout a user
      description: >-
        Expiring all sessions of a particular user. Effectively logging him out
        of all his sessions.
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: Bearer <session token>
        - name: hasura_id
          in: body
          required: true
          schema:
            type: object
            properties:
              hasura_id:
                type: integer
                description: The ID of the user
      responses:
        '200':
          description: A success message.
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorMessage'
      tags:
        - admin


definitions:
  UserInfo:
    type: object
    properties:
      hasura_id:
        type: integer
        description: Hasura ID of the current logged in identity.
      hasura_roles:
        type: array
        items:
          type: string
        description: All the roles attached to the current logged in identity.
      auth_token:
        type: string
        description: >-
          Authorization token of the current logged in user. This token can be
          used in further requests.
      email:
        type: string
        description: Email of the user. This can be null.
      mobile:
        type: string
        description: Mobile of the user. This can be null.
      username:
        type: string
        description: Username of the user. This can be null.
  SocialLoginUserInfo:
    type: object
    properties:
      hasura_id:
        type: integer
        description: Hasura ID of the current logged in identity.
      hasura_roles:
        type: array
        items:
          type: string
        description: All the roles attached to the current logged in identity.
      auth_token:
        type: string
        description: >-
          Authorization token of the current logged in user. This token can be
          used in further requests.
      access_token:
        type: string
        description: Access token of the user obtained from the provider.
      new_user:
        type: boolean
        description: Boolean value indicating if the user is new or returning.
  RoleList:
    type: object
    properties:
      roles:
        type: array
        description: a list of the role names
        items:
          type: string
  AdminUserInfo:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
      mobile:
        type: string
      is_active:
        type: boolean
      email_verfied:
        type: boolean
      mobile_verfied:
        type: boolean
      is_superuser:
        type: boolean
      roles:
        type: array
        items:
          type: string
      date_joined:
        type: string
        format: date-time
      last_login:
        type: string
        format: date-time
      active_sessions:
        type: array
        items:
          $ref: '#/definitions/Session'
  Session:
    type: object
    properties:
      session_id:
        type: string
      created:
        type: string
        format: date-time
  SuccessMessage:
    type: object
    properties:
      message:
        type: string
        description: A message indicating the success
  ErrorMessage:
    type: object
    properties:
      code:
        type: string
        description: Short machine readable code of the error.
      message:
        type: string
        description: Description of the error.
  SignupData:
    type: object
    properties:
      provider:
        description: Name of the provider. This field is compulsory.
        type: string
      data:
        description: Signup data specific to the provider. This field is compulsory.
        type: object
  EmailData:
    type: object
    properties:
      email:
        type: string
